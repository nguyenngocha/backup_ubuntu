WEBVTT

1
00:00:01.140 --> 00:00:04.210
In the second exercise we're going to take
a

2
00:00:04.210 --> 00:00:07.100
list of words, and turn them into an
acronym.

3
00:00:07.100 --> 00:00:13.990
So, we're gonna call this chap12ex2.py.

4
00:00:13.990 --> 00:00:19.950
So, for example, in my humble opinion
becomes IMHO.

5
00:00:21.010 --> 00:00:23.790
So to do that we're going to use the map
higher order

6
00:00:23.790 --> 00:00:29.680
function along with a very simple function
we're going to define first.

7
00:00:29.680 --> 00:00:33.592
Wich simply returns the first letter of a
word.

8
00:00:33.592 --> 00:00:37.190
All right so lets give it a shot, we'll
start off with our list.

9
00:00:37.190 --> 00:00:41.050
So here's our list of words in my humble
opinion.

10
00:00:41.050 --> 00:00:46.320
Then we'll create a variable acro and
we'll simply

11
00:00:46.320 --> 00:00:50.860
create a list from the map of first words.

12
00:00:52.330 --> 00:00:53.600
Then we'll print acro.

13
00:00:53.600 --> 00:00:55.670
[BLANK_AUDIO]

14
00:00:55.670 --> 00:00:56.540
Looks simple enough.

15
00:00:56.540 --> 00:00:59.140
[BLANK_AUDIO]

16
00:00:59.140 --> 00:01:00.600
Then we'll run the program.

17
00:01:02.300 --> 00:01:04.990
You see we get, still, a list.

18
00:01:06.480 --> 00:01:11.150
So what we really need to do, is we need
to get this list into string format.

19
00:01:11.150 --> 00:01:13.950
And it turns out that there is a

20
00:01:13.950 --> 00:01:18.980
very nice Python function for doing that
called join.

21
00:01:18.980 --> 00:01:21.230
We can take the join function.

22
00:01:21.230 --> 00:01:24.160
First thing, we're going to create a
variable, again, acro.

23
00:01:24.160 --> 00:01:28.220
Now, we're going to say acro is equal to
acro.join.

24
00:01:28.220 --> 00:01:31.210
We have to have an existing string.

25
00:01:31.210 --> 00:01:33.190
So, that's why I set acro equal to empty

26
00:01:33.190 --> 00:01:36.536
string, then I said acro is equal to
acro.join.

27
00:01:36.536 --> 00:01:40.520
Then we call list, map, first words again.

28
00:01:40.520 --> 00:01:43.330
And then we can say print acro.

29
00:01:44.920 --> 00:01:45.510
We'll save it.

30
00:01:47.660 --> 00:01:48.690
And run it.

31
00:01:48.690 --> 00:01:50.180
And that gets us very close.

32
00:01:51.560 --> 00:01:54.180
But most acronyms are all capital letters.

33
00:01:54.180 --> 00:01:56.650
So we need to get it to capital letters.

34
00:01:56.650 --> 00:01:59.510
And to do that all we have to do.

35
00:01:59.510 --> 00:02:03.370
Is use the string function, upper at the

36
00:02:03.370 --> 00:02:06.480
end of the string that we create right
here.

37
00:02:08.730 --> 00:02:09.930
Let's save the program.

38
00:02:11.950 --> 00:02:16.780
Clear the screen run it again, and there's
our acronym.

39
00:02:18.940 --> 00:02:24.130
So now, what we probably want to do is
take that and turn it into a function.

40
00:02:24.130 --> 00:02:24.990
So, how do we do that?

41
00:02:24.990 --> 00:02:28.640
Well, we simply take the code that we've
written down here.

42
00:02:28.640 --> 00:02:31.230
And so, we'll say acro is equal to empty
string.

43
00:02:32.560 --> 00:02:37.515
Acro is equal to acro.join, list.

44
00:02:37.515 --> 00:02:42.431
Map first words, upper,

45
00:02:42.431 --> 00:02:48.020
and then return acro, then we can comment

46
00:02:48.020 --> 00:02:53.380
out all this other code, and then say acro
is equal to acronym

47
00:02:53.380 --> 00:02:58.520
words, and then print acro, and then we
should be good to go.

48
00:03:00.450 --> 00:03:01.370
Let's clear the screen.

49
00:03:01.370 --> 00:03:01.870
And

50
00:03:03.970 --> 00:03:04.470
there we go.

51
00:03:05.870 --> 00:03:10.280
So to create a function to, make an
acronym out of words, the first thing we

52
00:03:10.280 --> 00:03:12.490
do is create a very simple helper
function,

53
00:03:12.490 --> 00:03:15.520
first, which we use in our map function.

54
00:03:15.520 --> 00:03:19.470
Then we add it into our map function right
here.

55
00:03:19.470 --> 00:03:24.860
And make a list out of that and the join
it so that each element

56
00:03:24.860 --> 00:03:29.740
is melded into one string which is right
here.

57
00:03:31.510 --> 00:03:34.720
And then the last step is to make it all
uppercase.

58
00:03:34.720 --> 00:03:41.210
So, we'll highlight it like so and then
return the resulting string.

59
00:03:41.210 --> 00:03:43.320
So that wraps up this exercise, and that

60
00:03:43.320 --> 00:03:47.300
wraps up this chapter on advanced uses of
functions.

