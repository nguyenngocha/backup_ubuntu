WEBVTT

1
00:00:01.180 --> 00:00:02.470
In this lesson, we're going to look at how

2
00:00:02.470 --> 00:00:06.020
to use list comprehensions with files, and
this will provide

3
00:00:06.020 --> 00:00:09.690
an even more graphic example of how those
comprehensions can

4
00:00:09.690 --> 00:00:12.750
save you coding time, over doing it the
traditional way.

5
00:00:12.750 --> 00:00:15.110
So, let's start a new program.

6
00:00:15.110 --> 00:00:17.825
We'll call this listcomp2.py.

7
00:00:20.210 --> 00:00:22.980
So what we want to do is, we want to open
a file

8
00:00:22.980 --> 00:00:26.520
of numbers, numbers that are stored in a
text file, in this case,

9
00:00:26.520 --> 00:00:29.240
grades, and then we want to be able to
store them in a

10
00:00:29.240 --> 00:00:33.090
list, so we can perform some sort of task
on them in memory.

11
00:00:33.090 --> 00:00:35.730
So the way that we would do that
traditionally, would

12
00:00:35.730 --> 00:00:38.650
be the first thing we would do is open the
file.

13
00:00:38.650 --> 00:00:44.560
Assign it to a file object and then
perhaps we might read it in to a list.

14
00:00:44.560 --> 00:00:48.045
Using the read lines function off the file
object.

15
00:00:48.045 --> 00:00:51.780
Then notice what happens when we read in
the grades.

16
00:00:55.180 --> 00:00:58.660
Each grade has a new line character
attached to it.

17
00:00:58.660 --> 00:01:02.440
Again, because we stored the grades
initially as

18
00:01:02.440 --> 00:01:04.830
a text file, so they're stored as strings.

19
00:01:04.830 --> 00:01:10.280
So what we need to do is we need to strip
those newline characters off, so the

20
00:01:10.280 --> 00:01:12.340
way we're gonna do that, again doing it

21
00:01:12.340 --> 00:01:17.690
traditionally, is to access each element
in the list.

22
00:01:17.690 --> 00:01:21.550
And strip that character off the end using
the r strip function.

23
00:01:21.550 --> 00:01:25.740
And so when we're finished, we should then

24
00:01:25.740 --> 00:01:29.030
have the grades saved without the new line
character.

25
00:01:29.030 --> 00:01:29.730
Let's take a look.

26
00:01:30.980 --> 00:01:33.659
It's running again, and sure enough, it
works.

27
00:01:35.880 --> 00:01:40.610
But to perform that complete task, took
one, two, three, four,

28
00:01:40.610 --> 00:01:44.410
five, well, six lines if you count the two
print statements.

29
00:01:44.410 --> 00:01:49.330
Four lines taking off the two print
statements, or print function calls.

30
00:01:49.330 --> 00:01:51.500
So, we can do that easier with a list

31
00:01:51.500 --> 00:01:53.760
comprehension, so let me demonstrate how
to do that.

32
00:01:53.760 --> 00:01:57.240
First, let's comment out all these other
lines.

33
00:01:57.240 --> 00:02:01.420
So to do it with a list comprehension,
we're going to say grades equal

34
00:02:03.170 --> 00:02:06.880
and because a file is just another
sequence of

35
00:02:06.880 --> 00:02:13.130
data, we can access it with a for Loop
when we did this in the previous chapter.

36
00:02:13.130 --> 00:02:15.970
Just as if it was a list, for example.

37
00:02:15.970 --> 00:02:20.520
So, in one line, in one expression, we can
open the file.

38
00:02:21.700 --> 00:02:23.390
Read the grades in.

39
00:02:23.390 --> 00:02:26.320
Strip off the trailing new line.

40
00:02:26.320 --> 00:02:27.850
Store it in our list.

41
00:02:29.390 --> 00:02:33.760
Then to show how it works, we can print
the grades in the list.

42
00:02:33.760 --> 00:02:34.840
Let's save that.

43
00:02:36.300 --> 00:02:38.610
Go back to our command prompt.

44
00:02:38.610 --> 00:02:39.390
Clear the screen.

45
00:02:39.390 --> 00:02:43.610
And run the program, and there we go.

46
00:02:43.610 --> 00:02:44.110
So

47
00:02:46.330 --> 00:02:52.650
this was a simple example of how to write
a list comprehension with a file.

48
00:02:52.650 --> 00:02:55.700
In the exercise that follows, I'll provide
you

49
00:02:55.700 --> 00:02:59.820
with a little more advanced, or complex
example.

50
00:02:59.820 --> 00:03:01.360
Right here, I wanted to show you just

51
00:03:01.360 --> 00:03:04.700
very dramatically, well, sort of
dramatically, how a

52
00:03:04.700 --> 00:03:07.580
list comprehension can be used with the
file,

53
00:03:07.580 --> 00:03:12.000
and again, save you quite a bit of coding.

54
00:03:12.000 --> 00:03:16.320
And with that, we're ready to move on to
the exercise for this short chapter, where

55
00:03:16.320 --> 00:03:19.190
I'm going to show you a more complex

56
00:03:19.190 --> 00:03:22.440
example of using a list comprehension with
a file.

